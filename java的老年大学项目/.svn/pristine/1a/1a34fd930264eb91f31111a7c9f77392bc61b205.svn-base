package com.learnyeai.course.service;

import java.util.HashMap;
import java.util.Map;

import javax.annotation.Resource;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.learnyeai.common.support.WeyeBaseService;
import com.learnyeai.course.mapper.CrsChapterResourceRelMapper;
import com.learnyeai.course.model.CrsChapterResourceRel;
import com.learnyeai.learnai.support.BaseMapper;

/**
 *
 * @author twang
 */
@Service
public class CrsChapterResourceRelWyService extends WeyeBaseService<CrsChapterResourceRel> {

	@Resource
	private CrsChapterResourceRelMapper crsChapterResourceRelMapper;

	@Override
	public BaseMapper<CrsChapterResourceRel> getMapper() {
		return crsChapterResourceRelMapper;
	}

	@Override
	protected boolean isLogicDelete() {
		return false;
	}

	@Transactional
	public Map<String, Object> addResource(CrsChapterResourceRel param) {
		Map<String, Object> map = new HashMap();
		int num = 0;
		for (String resId : param.getResId().split(",")) {
			CrsChapterResourceRel obj = new CrsChapterResourceRel();
			obj.setCptId(param.getCptId());
			obj.setResId(resId);
			obj = super.queryOne(obj);
			if (obj == null) {
				obj = new CrsChapterResourceRel();
				obj.setCptId(param.getCptId());
				obj.setResId(resId);
				obj.setResType(param.getResType());
				obj.setFileType(param.getFileType());
				super.save(obj);
			}
			num++;
		}
		map.put("status", 0);
		map.put("num", num);
		return map;
	}

	@Transactional
	public Map<String, Object> delResource(CrsChapterResourceRel param) {
		Map<String, Object> map = new HashMap();
		int num = 0;
		for (String resId : param.getResId().split(",")) {
			CrsChapterResourceRel obj = new CrsChapterResourceRel();
			obj.setCptId(param.getCptId());
			obj.setResId(resId);
			obj = super.queryOne(obj);
			if (obj != null) {
				super.delete(obj);
			}
			num++;
		}
		map.put("status", 0);
		map.put("num", num);
		return map;
	}
}
