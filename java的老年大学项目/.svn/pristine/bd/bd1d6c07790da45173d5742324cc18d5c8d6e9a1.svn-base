package com.learnyeai.activity.service;

import com.learnyeai.activity.model.ActCategory;
import com.learnyeai.activity.model.ActSiteCategoryRel;
import com.learnyeai.activity.mapper.ActSiteCategoryRelMapper;
import com.learnyeai.common.support.WeyeBaseService;
import com.learnyeai.learnai.support.BaseMapper;
import com.learnyeai.learnai.support.BaseService;
import com.learnyeai.tools.common.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import tk.mybatis.mapper.weekend.Weekend;
import tk.mybatis.mapper.weekend.WeekendCriteria;

import javax.annotation.Resource;
import java.util.Map;
import com.learnyeai.learnai.support.MyPage;


/**
 *
 * @author yl
 */
@Service
public class ActSiteCategoryRelWyService extends WeyeBaseService<ActSiteCategoryRel> {

    @Resource
    private ActSiteCategoryRelMapper actSiteCategoryRelMapper;

    @Override
    public BaseMapper<ActSiteCategoryRel> getMapper() {
        return actSiteCategoryRelMapper;
    }
    @Override
    protected boolean isLogicDelete(){
        return false;
    }

    @Autowired
    private ActCategoryWyService actCategoryWyService;



   @Override
    protected Weekend genSqlExample(ActSiteCategoryRel t, Map params) {
        Weekend w=super.genSqlExample(t,params);
        WeekendCriteria<ActSiteCategoryRel,Object> c=w.weekendCriteria();
        if(StringUtils.isNotBlank(t.getSiteId())){
            c.andEqualTo(ActSiteCategoryRel::getSiteId,t.getSiteId());
        }
        w.and(c);
        return w;
    }



    @Transactional
    public MyPage queryPageAll(ActSiteCategoryRel ascr){
        String catId = ascr.getCatId();
        ActCategory acg = new ActCategory();
        acg.setCatId(catId);
        MyPage<ActCategory> page = actCategoryWyService.queryPage(wks,new HashMap());

    }



}
