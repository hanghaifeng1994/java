package com.learnyeai.base.web.login;

import com.learnyeai.base.api.vo.PtsetSiteVo;
import com.learnyeai.base.model.PtsetSite;
import com.learnyeai.base.service.PtsetSiteWyService;
import com.learnyeai.core.exception.BusinessException;
import com.learnyeai.core.utils.CtxCommonUtils;
import com.learnyeai.learnai.consts.ReportErrorKey;
import com.learnyeai.learnai.consts.SessR;
import com.learnyeai.learnai.context.ThreadContextUtil;
import com.learnyeai.learnai.error.AresRuntimeException;
import com.learnyeai.learnai.session.Session;
import com.learnyeai.learnai.support.IBusinessContext;
import com.learnyeai.learnai.support.IController;
import com.learnyeai.tools.common.BeanMapUtils;
import com.learnyeai.tools.common.JsonMapper;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import java.beans.IntrospectionException;
import java.lang.reflect.InvocationTargetException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * 匿名登录
 * 参数：域名、或站点id
 * 返回值：商户id、商户方案、站点id
 * Created by zpz on 2018/8/3.
 */
@Component
public class AnonLoginController implements IController {

    @Autowired
    private PtsetSiteWyService ptsetSiteWyService;
    @Override
    public Object execute(IBusinessContext ctx) {
        PtsetSite site = ptsetSiteWyService.convert2Bean(ctx.getParamMap());

        String siteDomain = site.getSiteDomain();
        String siteId = site.getSiteId();

        if(StringUtils.isBlank(siteDomain) && StringUtils.isBlank(siteId)){
            throw new AresRuntimeException(ReportErrorKey.common_parameter_empty, "域名站点不能全为空");
        }

        // 查询站点
        PtsetSite entity = null;
        if(StringUtils.isNotBlank(siteId)){
            entity = ptsetSiteWyService.queryById(siteId);
        }else {
            List<PtsetSite> list = ptsetSiteWyService.queryList(site, null);
            if(list.size() > 0)
                entity = list.get(0);
        }
        if(null == entity){
            AresRuntimeException e = new AresRuntimeException();
            e.setCauseMsg("没有查到站点");
            throw e;
        }

        // 初始化session
        if (SessR.isLogined()) { // 已登录

        }else { // 未登录，需要返回token，保证session不冲突

        }
        //
        Session sess = ThreadContextUtil.getSessionRequired();

//        JsonMapper.jsonToMap()
        Object rst = entity;
        try {
            Map pp = BeanMapUtils.convertBean(entity);
            // sessionid
            pp.put(CtxCommonUtils.SESSION_TOKEN, sess.getId());


            rst = pp;
        } catch (IntrospectionException e) {
            e.printStackTrace();
        } catch (IllegalAccessException e) {
            e.printStackTrace();
        } catch (InvocationTargetException e) {
            e.printStackTrace();
        }
        return rst;
    }
}
